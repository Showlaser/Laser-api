// <auto-generated />
using System;
using LaserAPI.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaserAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("LaserAPI.Models.Dto.Animations.AnimationDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("Animation");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Animations.AnimationPatternDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AnimationUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PatternUuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("StartTimeMs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimelineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.HasIndex("AnimationUuid");

                    b.ToTable("PatternAnimation");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Animations.AnimationPatternKeyFrameDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AnimationPatternUuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("PropertyEdited")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PropertyValue")
                        .HasColumnType("REAL");

                    b.Property<int>("TimeMs")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.HasIndex("AnimationPatternUuid");

                    b.ToTable("AnimationPatternKeyFrameDto");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.LasershowSpotify.LasershowSpotifyConnectorDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LasershowUuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("LasershowSpotifyConnector");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.LasershowSpotify.LasershowSpotifyConnectorSongDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LasershowSpotifyConnectorUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpotifySongId")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.HasIndex("LasershowSpotifyConnectorUuid");

                    b.ToTable("LasershowSpotifyConnectorSongDto");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Lasershows.LasershowAnimationDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AnimationUuid")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LasershowUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StartTimeMs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimelineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.HasIndex("LasershowUuid");

                    b.ToTable("LasershowAnimation");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Lasershows.LasershowDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("Lasershow");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Patterns.PatternDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rotation")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Scale")
                        .HasColumnType("REAL");

                    b.Property<int>("XOffset")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YOffset")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.ToTable("Pattern");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Patterns.PointDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BlueLaserPowerPwm")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ConnectedToPointUuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("GreenLaserPowerPwm")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderNr")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PatternUuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("RedLaserPowerPwm")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.HasIndex("PatternUuid");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Zones.SafetyZoneDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AppliedOnShowLaserUuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxLaserPowerInZonePercentage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("Zone");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Zones.SafetyZonePointDto", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderNr")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SafetyZoneUuid")
                        .HasColumnType("TEXT");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.HasIndex("SafetyZoneUuid");

                    b.ToTable("ZonePosition");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Animations.AnimationPatternDto", b =>
                {
                    b.HasOne("LaserAPI.Models.Dto.Animations.AnimationDto", null)
                        .WithMany("AnimationPatterns")
                        .HasForeignKey("AnimationUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Animations.AnimationPatternKeyFrameDto", b =>
                {
                    b.HasOne("LaserAPI.Models.Dto.Animations.AnimationPatternDto", null)
                        .WithMany("AnimationPatternKeyFrames")
                        .HasForeignKey("AnimationPatternUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.LasershowSpotify.LasershowSpotifyConnectorSongDto", b =>
                {
                    b.HasOne("LaserAPI.Models.Dto.LasershowSpotify.LasershowSpotifyConnectorDto", null)
                        .WithMany("SpotifySongs")
                        .HasForeignKey("LasershowSpotifyConnectorUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Lasershows.LasershowAnimationDto", b =>
                {
                    b.HasOne("LaserAPI.Models.Dto.Lasershows.LasershowDto", null)
                        .WithMany("LasershowAnimations")
                        .HasForeignKey("LasershowUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Patterns.PointDto", b =>
                {
                    b.HasOne("LaserAPI.Models.Dto.Patterns.PatternDto", null)
                        .WithMany("Points")
                        .HasForeignKey("PatternUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Zones.SafetyZonePointDto", b =>
                {
                    b.HasOne("LaserAPI.Models.Dto.Zones.SafetyZoneDto", null)
                        .WithMany("Points")
                        .HasForeignKey("SafetyZoneUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Animations.AnimationDto", b =>
                {
                    b.Navigation("AnimationPatterns");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Animations.AnimationPatternDto", b =>
                {
                    b.Navigation("AnimationPatternKeyFrames");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.LasershowSpotify.LasershowSpotifyConnectorDto", b =>
                {
                    b.Navigation("SpotifySongs");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Lasershows.LasershowDto", b =>
                {
                    b.Navigation("LasershowAnimations");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Patterns.PatternDto", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("LaserAPI.Models.Dto.Zones.SafetyZoneDto", b =>
                {
                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
